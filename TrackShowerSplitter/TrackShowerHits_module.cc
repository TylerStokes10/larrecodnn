////////////////////////////////////////////////////////////////////////
// Class:       TrackShowerHits
// Module Type: producer
// File:        TrackShowerHits_module.cc
// Authors: dorota.stefan@cern.ch robert.sulej@cern.ch
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDProducer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include <memory>

namespace tss {
	class TrackShowerHits;
}

class tss::TrackShowerHits : public art::EDProducer {
public:
  explicit TrackShowerHits(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  TrackShowerHits(TrackShowerHits const &) = delete;
  TrackShowerHits(TrackShowerHits &&) = delete;
  TrackShowerHits & operator = (TrackShowerHits const &) = delete;
  TrackShowerHits & operator = (TrackShowerHits &&) = delete;

  // Required functions.
  void produce(art::Event & e) override;


private:

  // Declare member data here.

};


tss::TrackShowerHits::TrackShowerHits(fhicl::ParameterSet const & p)
// :
// Initialize member data here.
{
  // Call appropriate produces<>() functions here.
}

void tss::TrackShowerHits::produce(art::Event & e)
{
  // Implementation of required member function here.
}

DEFINE_ART_MODULE(tss::TrackShowerHits)
