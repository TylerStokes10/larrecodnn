#include "pointidalg.fcl"

BEGIN_PROLOG

standard_pointidtrainingdata:
{
    module_type:     "PointIdTrainingData"

    SelectedTPC:     []
	SelectedView:    []
    OutTextFilePath: "."
    Crop:            true

    TrainingDataAlg:  @local::standard_trainingdataalg
}

standard_pointidtrainingnuevent:
{
    module_type:     "PointIdTrainingNuevent"

	SelectedView:    []
    OutTextFilePath: "."

    GenModuleLabel:  "generator"
    FidVolCut:	      20.0

    TrainingDataAlg:  @local::standard_trainingdataalg
}

standard_pointidefftest:
{
	module_type:            "PointIdEffTest"

    WireLabel:              "caldata"
    SimModuleLabel:         "largeant"	
   	HitsModuleLabel:        "linecluster"
   	ClusterModuleLabel:     "linecluster"

    PointIdAlg:             @local::standard_pointidalg

    Threshold:              0.5
    View:                   2

    SaveHitsFile:           false
}

standard_emtrackclusterid:
{
	module_type:            "EmTrackClusterId"

    WireLabel:              "caldata"     # tag of deconvoluted ADC on wires (recob::Wire)
    HitModuleLabel:         "linecluster" # tag of hits made to create clusters, unclustered leftovers to be EM/track tagged
    ClusterModuleLabel:     "linecluster" # tag of clusters which are to be EM/track tagged

    PointIdAlg:             @local::standard_pointidalg

    Threshold:              0.5 # tag cluster as EM-like if net output accumulated over hits > threshold
    Views:                  []  # tag clusters in selected views only, or in all views if empty list
}

END_PROLOG

